rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny: No access to any document unless explicitly allowed.
    match /{document=**} {
      allow read, write: if false;
    }

    // Users Collection:
    // - Anyone can create their own user document.
    // - Users can only read and update their own document.
    // - On update, only the 'displayName' can be changed.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;

      // Validation: Ensure only 'displayName' is being modified on update.
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName']);
    }

    // Places Collection:
    // - Authenticated users can read all places.
    // - Authenticated users can create a place if the 'createdBy' field matches their UID.
    match /places/{placeId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.createdBy;
    }

    // Documents Subcollection:
    // - Authenticated users can read documents.
    // - Client-side writes (create, update, delete) are FORBIDDEN.
    //   This forces all analysis to go through our secure backend.
    match /places/{placeId}/documents/{docId} {
      allow read: if request.auth != null;
      allow write: if false;
    }
    
    // Feedback Subcollection:
    // - Authenticated users can read all feedback.
    // - Authenticated users can create new feedback.
    match /places/{placeId}/feedback/{feedbackId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.userId;
    }
  }
}
